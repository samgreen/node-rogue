// Generated by CoffeeScript 1.4.0
var Charm, TILE_ATTR, TILE_BG_COLORS, TILE_CHAR, TILE_FG_COLORS, TILE_TYPE, TerminalRenderer;

Charm = require('charm');

TILE_TYPE = {
  INVALID: 0,
  FLOOR: 1,
  WALL: 2,
  DOOR: 3
};

TILE_CHAR = [' ', '.', '#', 'D'];

TILE_FG_COLORS = [238, 'green', 8, 'blue'];

TILE_BG_COLORS = [240, 'cyan', 7, 'yellow'];

TILE_ATTR = ['reset', 'dim', 'bright', 'reset'];

TerminalRenderer = (function() {

  function TerminalRenderer(level) {
    this.level = level;
    this.charm = new Charm();
    this.charm.pipe(process.stdout);
    this.charm.reset();
  }

  TerminalRenderer.prototype.clear = function() {
    return this.charm.erase('screen');
  };

  TerminalRenderer.prototype.draw = function() {
    this.drawLevel();
    return this.drawStats();
  };

  TerminalRenderer.prototype.drawLevel = function() {
    var tile, x, y, _i, _j, _ref, _ref1;
    this.charm.push(true);
    for (x = _i = 0, _ref = this.level.sizeX; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
      for (y = _j = 0, _ref1 = this.level.sizeY; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
        tile = this.level.tileAt(x, y);
        this.drawTile(tile, x, y, 'red');
      }
    }
    return this.charm.pop(true);
  };

  TerminalRenderer.prototype.drawTile = function(tileType, x, y, color) {
    var tile;
    this.charm.position(x + 1, y + 1);
    tile = TILE_CHAR[tileType];
    this.charm.foreground(TILE_FG_COLORS[tileType]);
    this.charm.background(TILE_BG_COLORS[tileType]);
    this.charm.display(TILE_ATTR[tileType]);
    return this.charm.write(tile);
  };

  TerminalRenderer.prototype.drawStats = function() {
    this.charm.position(0, this.level.sizeY + 1);
    return this.charm.write('Test');
  };

  return TerminalRenderer;

})();

module.exports = TerminalRenderer;
