// Generated by CoffeeScript 1.4.0
var BlockGenerator, Generator,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Generator = require('./generator');

BlockGenerator = (function(_super) {

  __extends(BlockGenerator, _super);

  function BlockGenerator(map) {
    this.map = map;
    BlockGenerator.__super__.constructor.call(this, this.map);
  }

  BlockGenerator.prototype.initMap = function() {};

  return BlockGenerator;

})(Generator);

module.exports = Generator;
