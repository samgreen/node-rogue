// Generated by CoffeeScript 1.4.0
var Charm, TILE_ATTR, TILE_BG_COLORS, TILE_CHAR, TILE_FG_COLORS, TILE_TYPE, TerminalRenderer;

Charm = require('charm');

TILE_TYPE = {
  INVALID: 0,
  FLOOR: 1,
  WALL: 2,
  DOOR: 3
};

TILE_CHAR = [' ', '.', '#', 'D'];

TILE_FG_COLORS = [238, 'green', 8, 'blue'];

TILE_BG_COLORS = [240, 'cyan', 7, 'yellow'];

TILE_ATTR = ['reset', 'dim', 'bright', 'reset'];

TerminalRenderer = (function() {

  function TerminalRenderer(game) {
    this.game = game;
    this.level = this.game.level;
    this.charm = new Charm();
    this.charm.pipe(process.stdout);
    this.charm.reset();
  }

  TerminalRenderer.prototype.clear = function() {
    return this.charm.erase('screen');
  };

  TerminalRenderer.prototype.draw = function() {
    this.drawLevel();
    this.drawHero();
    return this.drawStats();
  };

  TerminalRenderer.prototype.drawLevel = function() {
    var _this = this;
    this.charm.push(true);
    this.level.forTiles(function(tile, x, y) {
      return _this.drawTile(tile, x, y);
    });
    return this.charm.pop(true);
  };

  TerminalRenderer.prototype.drawTile = function(tileType, x, y, foreColor, backColor) {
    var bgColor, fgColor, tile;
    tile = TILE_CHAR[tileType];
    if (!backColor) {
      bgColor = TILE_BG_COLORS[tileType];
    }
    if (!foreColor) {
      fgColor = TILE_FG_COLORS[tileType];
    }
    this.charm.display(TILE_ATTR[tileType]);
    return this.drawChar(tile, x, y, fgColor, bgColor);
  };

  TerminalRenderer.prototype.drawChar = function(char, x, y, fgColor, bgColor) {
    this.charm.position(x + 1, y + 1);
    if (fgColor) {
      this.charm.foreground(fgColor);
    }
    if (bgColor) {
      this.charm.background(bgColor);
    }
    return this.charm.write(char);
  };

  TerminalRenderer.prototype.drawHero = function() {
    var hero;
    hero = this.game.hero;
    return this.drawChar('@', hero.pos.x, hero.pos.y, 'red');
  };

  TerminalRenderer.prototype.drawMonsters = function() {};

  TerminalRenderer.prototype.drawStats = function() {
    this.charm.position(0, this.level.sizeY + 1);
    return this.charm.write('Test');
  };

  return TerminalRenderer;

})();

module.exports = TerminalRenderer;
